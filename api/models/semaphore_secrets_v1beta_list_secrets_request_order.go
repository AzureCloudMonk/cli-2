// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// SemaphoreSecretsV1betaListSecretsRequestOrder semaphore secrets v1beta list secrets request order
// swagger:model SemaphoreSecretsV1betaListSecretsRequestOrder
type SemaphoreSecretsV1betaListSecretsRequestOrder string

const (

	// SemaphoreSecretsV1betaListSecretsRequestOrderBYNAMEASC captures enum value "BY_NAME_ASC"
	SemaphoreSecretsV1betaListSecretsRequestOrderBYNAMEASC SemaphoreSecretsV1betaListSecretsRequestOrder = "BY_NAME_ASC"

	// SemaphoreSecretsV1betaListSecretsRequestOrderBYCREATETIMEASC captures enum value "BY_CREATE_TIME_ASC"
	SemaphoreSecretsV1betaListSecretsRequestOrderBYCREATETIMEASC SemaphoreSecretsV1betaListSecretsRequestOrder = "BY_CREATE_TIME_ASC"
)

// for schema
var semaphoreSecretsV1betaListSecretsRequestOrderEnum []interface{}

func init() {
	var res []SemaphoreSecretsV1betaListSecretsRequestOrder
	if err := json.Unmarshal([]byte(`["BY_NAME_ASC","BY_CREATE_TIME_ASC"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		semaphoreSecretsV1betaListSecretsRequestOrderEnum = append(semaphoreSecretsV1betaListSecretsRequestOrderEnum, v)
	}
}

func (m SemaphoreSecretsV1betaListSecretsRequestOrder) validateSemaphoreSecretsV1betaListSecretsRequestOrderEnum(path, location string, value SemaphoreSecretsV1betaListSecretsRequestOrder) error {
	if err := validate.Enum(path, location, value, semaphoreSecretsV1betaListSecretsRequestOrderEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this semaphore secrets v1beta list secrets request order
func (m SemaphoreSecretsV1betaListSecretsRequestOrder) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateSemaphoreSecretsV1betaListSecretsRequestOrderEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
