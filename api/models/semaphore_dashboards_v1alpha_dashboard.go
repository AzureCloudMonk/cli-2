// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

	import (
yaml "gopkg.in/yaml.v2"
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// SemaphoreDashboardsV1alphaDashboard semaphore dashboards v1alpha dashboard
// swagger:model SemaphoreDashboardsV1alphaDashboard
type SemaphoreDashboardsV1alphaDashboard struct {

	// metadata
	Metadata *SemaphoreDashboardsV1alphaDashboardMetadata `json:"metadata,omitempty"`

	// spec
	Spec *SemaphoreDashboardsV1alphaDashboardSpec `json:"spec,omitempty"`
}

// Validate validates this semaphore dashboards v1alpha dashboard
func (m *SemaphoreDashboardsV1alphaDashboard) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateMetadata(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSpec(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *SemaphoreDashboardsV1alphaDashboard) validateMetadata(formats strfmt.Registry) error {

	if swag.IsZero(m.Metadata) { // not required
		return nil
	}

	if m.Metadata != nil {
		if err := m.Metadata.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("metadata")
			}
			return err
		}
	}

	return nil
}

func (m *SemaphoreDashboardsV1alphaDashboard) validateSpec(formats strfmt.Registry) error {

	if swag.IsZero(m.Spec) { // not required
		return nil
	}

	if m.Spec != nil {
		if err := m.Spec.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("spec")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *SemaphoreDashboardsV1alphaDashboard) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SemaphoreDashboardsV1alphaDashboard) UnmarshalBinary(b []byte) error {
	var res SemaphoreDashboardsV1alphaDashboard
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}


  // MmarshalYaml interface implementation
  func (m *SemaphoreDashboardsV1alphaDashboard) MarshalYaml() ([]byte, error) {
    return yaml.Marshal(m)
  }

  

  // MmarshalYaml interface implementation
  func (m *SemaphoreDashboardsV1alphaDashboard) UnmarshalYaml(b []byte) error {
    var res SemaphoreDashboardsV1alphaDashboard

    err := yaml.UnmarshalStrict(b, &res)

    if err != nil {
      return err
    }

    *m = res
    return nil
  }

  