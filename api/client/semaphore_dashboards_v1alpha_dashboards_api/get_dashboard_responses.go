// Code generated by go-swagger; DO NOT EDIT.

package semaphore_dashboards_v1alpha_dashboards_api

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/semaphoreci/cli/api/models"
)

// GetDashboardReader is a Reader for the GetDashboard structure.
type GetDashboardReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDashboardReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetDashboardOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewGetDashboardDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetDashboardOK creates a GetDashboardOK with default headers values
func NewGetDashboardOK() *GetDashboardOK {
	return &GetDashboardOK{}
}

/*GetDashboardOK handles this case with default header values.

(empty)
*/
type GetDashboardOK struct {
	Payload *models.SemaphoreDashboardsV1alphaDashboard
}

func (o *GetDashboardOK) Error() string {
	return fmt.Sprintf("[GET /api/v1alpha/dashboards/{id_or_name}][%d] getDashboardOK  %+v", 200, o.Payload)
}

func (o *GetDashboardOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SemaphoreDashboardsV1alphaDashboard)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDashboardDefault creates a GetDashboardDefault with default headers values
func NewGetDashboardDefault(code int) *GetDashboardDefault {
	return &GetDashboardDefault{
		_statusCode: code,
	}
}

/*GetDashboardDefault handles this case with default header values.

error
*/
type GetDashboardDefault struct {
	_statusCode int

	Payload string
}

// Code gets the status code for the get dashboard default response
func (o *GetDashboardDefault) Code() int {
	return o._statusCode
}

func (o *GetDashboardDefault) Error() string {
	return fmt.Sprintf("[GET /api/v1alpha/dashboards/{id_or_name}][%d] GetDashboard default  %+v", o._statusCode, o.Payload)
}

func (o *GetDashboardDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
